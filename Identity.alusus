import "Srl/Console";
import "Srl/Time";
import "Srl/Possible";
import "Srl/Net";
import "Srl/errors";
import "Apm";
Apm.importFile("Alusus/Crypto");
Apm.importFile("Alusus/Json");
Apm.importFile("Alusus/Promises");

import "Identity/errors";
import "Identity/Providers/Provider";
import "Identity/Providers/GoogleProvider";
import "Identity/net_helpers";
import "Identity/json_helpers";
import "Identity/dtos";
import "Identity/be_api";

import "Identity/GoogleAuthenticateButton";
import "Identity/rest_api";
import "Identity/fe_api";

@merge module Identity {
    use Srl;
    use WebPlatform;
    use Promises;

    function setup(
        providers: Array[SrdRef[Provider]],
        pkeyFilename: CharsPtr,
        loginCallback: closure(AuthenticationResponse): String
    ) {
        Identity.providers = providers;
        privateKey~no_deref = Crypto.EvpPkey.readPem(pkeyFilename);
        onLogin = loginCallback;
    }

    function addProvider(provider: SrdRef[Provider]) {
        providers.add(provider);
    }
}
